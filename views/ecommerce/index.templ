package ecommerce

import (
	"go-demo/internal/ecommerce/domain"
	"go-demo/internal/shared"
	shared_views "go-demo/views/shared"
	"go-demo/views/layouts"
	"fmt"
)

type CartProductViewModel struct {
	DetailId           string
	ProductName        string
	ProductDescription string
	Quantity           int
}

css htmxIndicator() {
}

templ IndexPage() {
	@layouts.Base() {
		@shared_views.Toast()
		<main class="container max-w-7xl mx-auto grid grid-cols-6 gap-4">
			<section class="col-span-4">
				@SectionTitle("Products")
				<ul
					hx-get="/products/get-list"
					hx-trigger="load"
					hx-target="this"
					hx-indicator="#indicator"
					class="grid grid-cols-3 gap-4"
				>
					<div id="indicator">
						Loading products... 
					</div>
				</ul>
			</section>
			<section class="col-span-2">
				@SectionTitle("Cart")
				<ul
					id="cart"
					hx-get="/cart"
					hx-trigger="load"
					hx-target="this"
					hx-indicator="#indicator"
					class="space-y-2"
				>
					<div id="indicator">
						Loading cart...
					</div>
				</ul>
			</section>
		</main>
		@shared_views.InitToastEvents()
	}
}

templ ProductList(products []domain.Product, token string) {
	for _, p := range products {
		<li>
			<div class="p-2 border border-slate-300 space-y-2">
				<h2>{ p.Name }</h2>
				<img
					src={ fmt.Sprintf("/products/%s/image/medium", p.ID.String()) }
					alt="the product image"
					class="rounded-md object-cover h-48 w-96"
				/>
				<p class="text-sm text-slate-600">{ p.Description }</p>
				<form
					hx-put="/cart"
					hx-target="#cart"
					hx-swap="beforeend"
					hx-indicator={ fmt.Sprintf("#indicator-%s", p.ID.String()) }
				>
					<input type="hidden" name={ shared.CSRFTokenKey } value={ token }/>
					<input type="hidden" name="product_id" value={ p.ID.String() }/>
					<div class="flex items-center justify-end">
						<button
							type="submit"
							class="ml-auto bg-slate-500 hover:bg-slate-700 text-slate-50 font-semibold text-sm py-2 px-4 rounded flex items-center gap-2"
						>
							Add to cart
							<img src="/static/icons/spinner.svg" id={ fmt.Sprintf("indicator-%s", p.ID.String()) } class="my-indicator"/>
						</button>
					</div>
				</form>
			</div>
		</li>
	}
}

templ Cart(models []CartProductViewModel, token string) {
	for _, m := range models {
		@CartProduct(m, token)
	}
}

templ CartProduct(m CartProductViewModel, token string) {
	<li id={ fmt.Sprintf("cart-item-%s", m.DetailId) } class="border border-slate-300 p-2 flex items-center justify-between">
		<div>
			<h2>{ m.ProductName }</h2>
			<p>{ m.ProductDescription }</p>
			<p>{ "Quantity:  " }{ fmt.Sprintf("%d", m.Quantity) }</p>
		</div>
		if m.Quantity > 1 {
			@DecreateQuantityForm(m.DetailId, token)
		} else {
			@RemoveFromCartForm(m.DetailId, token)
		}
	</li>
}

templ SectionTitle(title string) {
	<h1 class="text-center text-xl font-semibold p-2">{ title }</h1>
}

templ RemoveFromCartForm(detailId string, token string) {
	<form hx-post="/cart/delete" hx-target={ fmt.Sprintf("#cart-item-%s", detailId) } hx-swap="outerHTML">
		<input type="hidden" name="cart_detail_id" value={ detailId }/>
		<input type="hidden" name={ shared.CSRFTokenKey } value={ token }/>
		<button type="submit" class="py-1 px-2 text-slate-50 text-sm bg-slate-500 rounded-md shadow-md">
			X
		</button>
	</form>
}

templ DecreateQuantityForm(detailId string, token string) {
	<form hx-patch="/cart" hx-target={ fmt.Sprintf("#cart-item-%s", detailId) } hx-swap="outerHTML">
		<input type="hidden" name="cart_detail_id" value={ detailId }/>
		<input type="hidden" name={ shared.CSRFTokenKey } value={ token }/>
		<button type="submit" class="py-1 px-2 text-slate-50 text-sm bg-slate-500 rounded-md shadow-md">
			-
		</button>
	</form>
}
