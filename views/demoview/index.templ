package demoview

import (
	"go-demo/views/layoutview"
	"go-demo/views/shared"
	"go-demo/internal/domain"

	"fmt"
	"go-demo/internal/app/middlewares"
)

type CartProductViewModel struct {
	DetailId           string
	ProductName        string
	ProductDescription string
	Quantity           int
}

css htmxIndicator() {
}

templ IndexPage() {
	@layoutview.Base() {
		@shared.Toast()
		<main class="container max-w-7xl mx-auto grid grid-cols-4 gap-4">
			<section class="col-span-3">
				<h1>Products</h1>
				<ul
					hx-get="/products"
					hx-trigger="load"
					hx-target="this"
					hx-indicator="#indicator"
					class="grid grid-cols-3 gap-4"
				>
					<div id="indicator">
						Loading products... 
					</div>
				</ul>
			</section>
			<section>
				<h1>Cart</h1>
				<ul
					id="cart"
					hx-get="/cart"
					hx-trigger="load"
					hx-target="this"
					hx-indicator="#indicator"
				>
					<div id="indicator">
						Loading cart...
					</div>
				</ul>
			</section>
		</main>
	}
}

templ ProductList(products []domain.Product, token string) {
	for _, p := range products {
		<li>
			<div class="p-2 border border-slate-300 space-y-2">
				<h2>{ p.Name }</h2>
				<img
					src={ fmt.Sprintf("/products/%s/image/medium", p.ID.String()) }
					alt="the product image"
					class="rounded-md object-cover h-48 w-96"
				/>
				<p class="text-sm text-slate-600">{ p.Description }</p>
				<form
					hx-put="/cart"
					hx-target="#cart"
					hx-swap="beforeend"
					hx-indicator={ fmt.Sprintf("#indicator-%s", p.ID.String()) }
				>
					<input type="hidden" name={ middlewares.CSRFTokenKey } value={ token }/>
					<input type="hidden" name="product_id" value={ p.ID.String() }/>
					<div class="flex items-center justify-end">
						<button
							type="submit"
							class="ml-auto bg-slate-500 hover:bg-slate-700 text-slate-50 font-semibold text-sm py-2 px-4 rounded flex items-center gap-2"
						>
							Add to cart
							<img src="/static/icons/spinner.svg" id={ fmt.Sprintf("indicator-%s", p.ID.String()) } class="my-indicator"/>
						</button>
					</div>
				</form>
			</div>
		</li>
	}
}

templ Cart(cartID string, models []CartProductViewModel) {
	for _, m := range models {
		@CartProduct(m)
	}
}

templ CartProduct(m CartProductViewModel) {
	<li id={ m.DetailId } class="border border-slate-300 p-2">
		<h2>{ m.ProductName }</h2>
		<p>{ m.ProductDescription }</p>
		<p>{ "Quantity:  " }{ fmt.Sprintf("%d", m.Quantity) }</p>
	</li>
}
